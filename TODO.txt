data structure is array of objects
example :- [{title:'something',id:<number>,subTasks:[{text:"something",done:'boolean'}]}]
another :- {<idNumber>:{title:<something>,subTasks:[{text:"something",done:'boolean'}]}} --good--

launch todo server 
--Done--    > create package.json file
--Done--    > add eslint rules
--Done--    > add mocha,superTest and sinon to the package.json for testing
--Done--    > create lib folder 
--Done--        > add handlers for file not found and method not found
--Done--    > create public folder for the environment setup
--Done--    > create server file for the lancing the server

create home page for todo
--Done--    > home page in the public/html folder
--Done--    > home page styles in the public/css folder

--Done--  >add titles deletion
--Done--  >add titles to add tasks

add subTasks

---------
Pairing:
--done-- * Todo class has to made it has to manage all behavior related to todoList.
  --done-- addNewTask
  --done-- deleteTask
  --done-- getParticularTask
  --done-- addSubTask
  --done-- deleteSubTask
  --done-- toggleDone
  --done-- editTask
  --done-- editSubTask

--done--* problem in  assigning id whenever i will close the server the id will start from one so we need a mechanism to solve that problem.
--done--* while editing task or subtask for wrong spelling it is showing error we don't want that underline so we have to remove that line.
--done--* Want to add some space between edit icon and delete icon.
--done--* give style of h2 tag of class body header in css file
--done--* Search by task. 
--done--* changing ui of displaying task container.
--done--* delete tags class like p,ul, li and merge with div classes.
--done--* Search by subTask.
--done-- change server module http to express.
* implement logout feature.
* show userName or password is incorrect.
* change font size of login page